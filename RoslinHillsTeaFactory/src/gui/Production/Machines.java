/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gui.Production;

import com.sun.source.tree.IfTree;
import model.MySQL;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kavindu Anupama
 */
public class Machines extends javax.swing.JDialog {

    private String process;
    private static Withering machine;
    private static Rolling machine2;
    private static Oxidation machine3;
    private static Drying machine4;
    
    private static Machines mach;

    public void setMachines(Machines mach) {
        this.mach = mach;
    }

//    public void setMachines(Machines mac){
//        this.machine = mac;
//    }
    public Machines(java.awt.Frame parent, boolean modal, JPanel jpanel, String process) {
        super(parent, modal);
        initComponents();
        this.process = process;
        loadMachines();

        if (jpanel instanceof Withering) {
            this.machine = (Withering) jpanel;
        }
        if (jpanel instanceof Rolling) {
            this.machine2 = (Rolling) jpanel;
        }
        if (jpanel instanceof Oxidation) {
            this.machine3 = (Oxidation) jpanel;
        }
        if (jpanel instanceof Drying) {
            this.machine4 = (Drying) jpanel;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Machine ID", "Machine Name", "Machine Process Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable5);
        if (jTable5.getColumnModel().getColumnCount() > 0) {
            jTable5.getColumnModel().getColumn(0).setResizable(false);
            jTable5.getColumnModel().getColumn(1).setResizable(false);
            jTable5.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loadMachines() {

        try {

            ResultSet resultSet = MySQL.executeSearch("SELECT * FROM `machine` "
                    + "INNER JOIN `production_status` ON `machine`.`production_status_id`=`production_status`.`id` "
                    + "WHERE `production_status`.`name` = '" + this.process + "'");

            DefaultTableModel model = (DefaultTableModel) jTable5.getModel();
            model.setRowCount(0);
            
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

            for (int i = 0; i < jTable5.getColumnCount(); i++) {
                jTable5.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }

            while (resultSet.next()) {

                Vector<String> vector = new Vector<>();
                vector.add(resultSet.getString("machine.id"));
                vector.add(resultSet.getString("machine.name"));
                vector.add(resultSet.getString("production_status.name"));
                model.addRow(vector);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }


    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked

        int row = jTable5.getSelectedRow();

        if (evt.getClickCount() == 2) {
            if (machine != null) {
                machine.getMachines().setText(String.valueOf(jTable5.getValueAt(row, 1)));
                this.dispose();
            }
        }
        if (evt.getClickCount() == 2) {
            if (machine2 != null) {
                machine2.getMachines().setText(String.valueOf(jTable5.getValueAt(row, 1)));
                this.dispose();
            }
        }
        if (evt.getClickCount() == 2) {
            if (machine3 != null) {
                machine3.getMachines().setText(String.valueOf(jTable5.getValueAt(row, 1)));
                this.dispose();
            }
        }
        if (evt.getClickCount() == 2) {
            if (machine4 != null) {
                machine4.getMachines().setText(String.valueOf(jTable5.getValueAt(row, 1)));
                this.dispose();
            }
        }

    }//GEN-LAST:event_jTable5MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable5;
    // End of variables declaration//GEN-END:variables
}
