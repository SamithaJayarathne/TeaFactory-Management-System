/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.TestDepartment;

import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import model.MySQL;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author j
 */
public class Feedback extends javax.swing.JPanel {

    /**
     * Creates new form Feedback
     */
    public Feedback() {
        initComponents();
        design();
        loadFeedback();
    }
    
    private void design(){
         
         idTextField.putClientProperty("JComponent.roundRect", true);
         resonTextField.putClientProperty("JComponent.roundRect", true);
         qualityTextField.putClientProperty("JComponent.roundRect", true);
         updatefeedbackButton.putClientProperty("JButton.buttonType", "roundRect");
         addtofeedbackButton.putClientProperty("JButton.buttonType", "roundRect");
         qualityButton.putClientProperty("JButton.buttonType", "roundRect");
         sendfeedbackButton.putClientProperty("JButton.buttonType", "roundRect");
         deleteButton.putClientProperty("JButton.buttonType", "roundRect");
         clearall.putClientProperty("JButton.buttonType", "roundRect");
     }

    private void loadFeedback() {

        try {

            ResultSet resultSet = MySQL.executeSearch("SELECT * FROM `quality_feedback`"
                    + "INNER JOIN `quality_control` ON `quality_feedback`.`quality_control_id` = `quality_control`.`id`");

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            while (resultSet.next()) {

                Vector<String> vector = new Vector<>();

                vector.add(resultSet.getString("id"));
                vector.add(resultSet.getString("feedback"));
                vector.add(resultSet.getString("quality_control_id"));

                model.addRow(vector);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        qualityButton = new javax.swing.JButton();
        qualityTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        addtofeedbackButton = new javax.swing.JButton();
        updatefeedbackButton = new javax.swing.JButton();
        clearall = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        sendfeedbackButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        resonTextField = new javax.swing.JTextField();

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Quality Feedback");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel3.setText("ID");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel7.setText("Feedback Reason");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel8.setText("Batch Quality");

        qualityButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        qualityButton.setText("Select");

        jPanel2.setBackground(new java.awt.Color(102, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        addtofeedbackButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addtofeedbackButton.setText("Add To Feedback");
        addtofeedbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtofeedbackButtonActionPerformed(evt);
            }
        });

        updatefeedbackButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updatefeedbackButton.setText("Update Feedback");
        updatefeedbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatefeedbackButtonActionPerformed(evt);
            }
        });

        clearall.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clearall.setText("Clear All");
        clearall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearallActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 109, 109));
        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addtofeedbackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updatefeedbackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(clearall, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addtofeedbackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updatefeedbackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearall, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        sendfeedbackButton.setBackground(new java.awt.Color(255, 109, 109));
        sendfeedbackButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        sendfeedbackButton.setText("Send Feedback");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Feedback Reason", "Batch Quality"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jTable1.setMinimumSize(new java.awt.Dimension(0, 0));
        jTable1.setPreferredSize(new java.awt.Dimension(1250, 577));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        resonTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resonTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(qualityTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qualityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(idTextField)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(resonTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 845, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(284, 284, 284)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sendfeedbackButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resonTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qualityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(qualityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendfeedbackButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addtofeedbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtofeedbackButtonActionPerformed
        
        String id = idTextField.getText();
        String reason = resonTextField.getText();
        String batch = qualityTextField.getText();

        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your ID", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (reason.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your Reason", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (batch.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Batch Quality", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            try {

                ResultSet resultSet = MySQL.executeSearch("SELECT * FROM `quality_feedback` WHERE `id` = '" + id + "'");

                if (resultSet.next()) {
                    JOptionPane.showMessageDialog(this, "Quality Feedback Already Added", "Warning", JOptionPane.WARNING_MESSAGE);
                } else {

                    MySQL.executeIUD("INSERT INTO `quality_feedback`(`id`,`feedback`,`quality_control_id`)"
                            + "VALUES('" + id + "','" + reason + "','" + batch + "')");

                    loadFeedback();
                    reset();
                    
                    JOptionPane.showMessageDialog(this, "Quality Feedback Successfully Added", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_addtofeedbackButtonActionPerformed

    private void updatefeedbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatefeedbackButtonActionPerformed

        String id = idTextField.getText();
        String reason = resonTextField.getText();
        String batch = qualityTextField.getText();

        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your ID", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (reason.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your Reason", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (batch.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Batch Quality", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            try {

                ResultSet resultSet = MySQL.executeSearch("SELECT * FROM `quality_feedback` WHERE `id` = '" + id + "'");
                
                boolean canUpdate = false;

                if (resultSet.next()) {
                    if (resultSet.getString("id").equals(id)) {
                        canUpdate = true;
                    } else {
                        JOptionPane.showMessageDialog(this, "Quality Feedback Already Added", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                    
                } else {
                    canUpdate = true;
                }
                
                if (canUpdate) {
                    
                    MySQL.executeIUD("UPDATE `quality_feedback` SET `id` = '"+id+"',"
                            + "`feedback` = '"+reason+"',"
                            + "`quality_control_id` = '"+batch+"'"
                            + "WHERE `id` = '"+id+"'");

                    loadFeedback();
                    reset();
                    
                    JOptionPane.showMessageDialog(this, "Quality Feedback Successfully Update", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
      
    }//GEN-LAST:event_updatefeedbackButtonActionPerformed

    private void clearallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearallActionPerformed

        idTextField.setEditable(true);
        addtofeedbackButton.setEnabled(true);
        
        reset();
    }//GEN-LAST:event_clearallActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        int row = jTable1.getSelectedRow();
        
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please Select a Feedback to Delete", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
        
            try {
                
                String id = String.valueOf(jTable1.getValueAt(row, 0));
                
                MySQL.executeIUD("DELETE FROM `quality_feedback` WHERE `id` = '"+id+"'");
                
                reset();
                loadFeedback();
                
                JOptionPane.showMessageDialog(this, "Quality Feedback Deleted Successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
                addtofeedbackButton.setEnabled(true);
                idTextField.setEditable(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        addtofeedbackButton.setEnabled(false);
        
        int row = jTable1.getSelectedRow();
        
        String id = String.valueOf(jTable1.getValueAt(row, 0));
        idTextField.setText(id);
        idTextField.setEditable(false);
        
        String reason = String.valueOf(jTable1.getValueAt(row, 1));
        resonTextField.setText(reason);
        
        String batch = String.valueOf(jTable1.getValueAt(row, 2));
        qualityTextField.setText(batch);

    }//GEN-LAST:event_jTable1MouseClicked

    private void resonTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resonTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resonTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtofeedbackButton;
    private javax.swing.JButton clearall;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField idTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton qualityButton;
    private javax.swing.JTextField qualityTextField;
    private javax.swing.JTextField resonTextField;
    private javax.swing.JButton sendfeedbackButton;
    private javax.swing.JButton updatefeedbackButton;
    // End of variables declaration//GEN-END:variables

    private void reset() {
        
        idTextField.setText("");
        resonTextField.setText("");
        qualityTextField.setText("");
        
        jTable1.clearSelection();
    }
}
