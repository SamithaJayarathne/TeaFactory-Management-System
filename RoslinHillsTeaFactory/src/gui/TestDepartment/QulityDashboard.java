/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.TestDepartment;

import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.ResultSet;
import model.MySQL;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author hansa
 */
public class QulityDashboard extends javax.swing.JPanel {

    /**
     * Creates new form qulityDashboard
     */
    public QulityDashboard() {
        initComponents();
        showPieChartV();
        showPieChartV2();
    }
/////////////////////////////////////////////////////////////////////////////////////////////////

    public void showPieChartV() {

        DefaultPieDataset barDataset = new DefaultPieDataset();
        try {

            ResultSet resultSet = MySQL.executeSearch(
                    "SELECT qs.name AS quality_status, COUNT(*) AS quality_status_count"
                    + " FROM quality_control q "
                    + " JOIN quality_status qs ON q.quality_status_id = qs.id"
                    + " GROUP BY qs.name"
            );

            while (resultSet.next()) {

                barDataset.setValue(resultSet.getString("quality_status"), resultSet.getDouble("quality_status_count"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        JFreeChart piechart = ChartFactory.createPieChart("Quality Status Distribution", barDataset, false, true, false);

        PiePlot piePlot = (PiePlot) piechart.getPlot();

        piePlot.setSectionPaint("Approved", new Color(102, 255, 210));
        piePlot.setSectionPaint("Reject", new Color(255, 105, 102));

        piePlot.setBackgroundPaint(Color.white);

        ChartPanel barChartPanel = new ChartPanel(piechart);
        jPanel13.removeAll();
        jPanel13.add(barChartPanel, BorderLayout.CENTER);
        jPanel13.validate();
    }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public void showPieChartV2() {

        DefaultPieDataset barDataset = new DefaultPieDataset();
        try {

            ResultSet resultSet = MySQL.executeSearch(
                    "SELECT at.name AS action_taken, COUNT(*) AS action_taken_count"
                    + " FROM quality_control q "
                    + " JOIN action_taken at ON q.action_taken_id = at.id"
                    + " GROUP BY at.name"
            );

            while (resultSet.next()) {

                barDataset.setValue(resultSet.getString("action_taken"), resultSet.getDouble("action_taken_count"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        JFreeChart piechart = ChartFactory.createPieChart("Quality Action Taken Distribution", barDataset, false, true, false);

        PiePlot piePlot = (PiePlot) piechart.getPlot();

        piePlot.setSectionPaint("None", new Color(102, 255, 210));
        piePlot.setSectionPaint("Re-dry Suggested", new Color(255, 105, 102));
        piePlot.setSectionPaint("Reprocess Required", new Color(125, 105, 102));

        piePlot.setBackgroundPaint(Color.white);

        ChartPanel barChartPanel = new ChartPanel(piechart);
        jPanel12.removeAll();
        jPanel12.add(barChartPanel, BorderLayout.CENTER);
        jPanel12.validate();
    }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
